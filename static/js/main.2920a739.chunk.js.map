{"version":3,"sources":["api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","App","useState","user","newToDo","setNewToDo","todosCopy","todosFromServer","copy","usersFromServer","toDoList","setToDoList","className","onSubmit","event","preventDefault","maxId","Math","max","map","todo","eventUser","currentTarget","value","eventTitle","prevState","setTimeout","submitHandler","type","placeholder","onChange","target","replace","inputHandler","classNames","handleSelect","href","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2920a739.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nexport const App = () => {\n  const [newToDo, setNewToDo] = useState({\n    title: '',\n    user: '',\n  });\n  const todosCopy = [...todosFromServer];\n  const copy = [...usersFromServer];\n\n  const [toDoList, setToDoList] = useState(todosCopy);\n\n  function submitHandler(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    const maxId = Math.max(...todosCopy.map(todo => +todo.id));\n    const eventUser = (event.currentTarget[1] as HTMLInputElement).value;\n    const eventTitle = (event.currentTarget[0] as HTMLInputElement).value;\n\n    if (eventUser === '0') {\n      setNewToDo(prevState => ({\n        title: prevState.title,\n        user: 'alarm',\n      }));\n      setTimeout(() => setNewToDo(prevState => ({\n        title: prevState.title,\n        user: '',\n      })), 1000);\n    } else if (eventTitle === '') {\n      setNewToDo(prevState => ({\n        title: 'test',\n        user: prevState.user,\n      }));\n      setTimeout(() => setNewToDo(prevState => ({\n        title: '',\n        user: prevState.user,\n      })), 1000);\n    }\n\n    const post = {\n      id: maxId + 1,\n      title: eventTitle,\n      completed: false,\n      userId: +eventUser,\n    };\n\n    if (eventTitle !== '' && eventUser !== '0') {\n      setToDoList([post, ...toDoList]);\n      setNewToDo({\n        title: '',\n        user: '',\n      });\n    }\n  }\n\n  function inputHandler(event: React.ChangeEvent<HTMLInputElement>) {\n    setNewToDo({\n      title: event.target.value.replace(/[^a-z0-9 ]/gi, ''),\n      user: newToDo.user,\n    });\n  }\n\n  function handleSelect(event: React.ChangeEvent<HTMLSelectElement>) {\n    setNewToDo({\n      title: newToDo.title,\n      user: event.target.value === '0' ? '' : event.target.value,\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form onSubmit={(event) => submitHandler(event)}>\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={newToDo.title}\n            placeholder=\"test\"\n            onChange={(event) => inputHandler(event)}\n          />\n          <span className={classNames('error', {\n            'show-error': newToDo.title === '',\n            'show-error alarm': newToDo.title === 'test',\n          })}\n          >\n            Please enter a title\n          </span>\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={newToDo.user}\n            onChange={(event) => handleSelect(event)}\n          >\n            <option value=\"0\">Choose a user</option>\n            {copy.map((user) => {\n              return (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n              );\n            })}\n          </select>\n\n          <span className={classNames('error', {\n            'show-error': newToDo.user === '',\n            'show-error alarm': newToDo.user === 'alarm',\n          })}\n          >\n            Please choose a user\n          </span>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        {toDoList.map(todo => {\n          return (\n            <article\n              data-id={todo.id}\n              className=\"TodoInfo TodoInfo--completed\"\n            >\n              <h2 className=\"TodoInfo__title\">\n                {todo.title}\n              </h2>\n\n              <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\">\n                {copy.find(user => user.id === todo.userId)?.name}\n              </a>\n            </article>\n          );\n        })}\n      </section>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}