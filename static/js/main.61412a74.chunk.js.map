{"version":3,"sources":["api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","App","useState","user","clicked","newToDo","setNewToDo","todosCopy","todosFromServer","copy","usersFromServer","toDoList","setToDoList","getUserUnfo","todo","user2","find","user3","className","href","onSubmit","event","preventDefault","currentTarget","eventTitle","eventUser","maxId","Math","max","map","value","prevState","post","submitHandler","type","placeholder","onChange","target","replace","inputHandler","classNames","handleSelect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61412a74.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport './App.scss';\n\ninterface User {\n  id: string,\n  name: string,\n  username: string,\n  email: string,\n}\n\ninterface ToDo {\n  id: number,\n  title: string,\n  completed: boolean,\n  userId: number,\n}\n\nexport const App = () => {\n  const [newToDo, setNewToDo] = useState({\n    title: '',\n    user: '',\n    clicked: false,\n  });\n\n  const todosCopy = [...todosFromServer];\n  const copy = [...usersFromServer];\n\n  const [toDoList, setToDoList] = useState(todosCopy);\n\n  function submitHandler(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    const [eventTitle, eventUser]\n      = event.currentTarget as unknown as HTMLInputElement[];\n    const maxId = Math.max(...todosCopy.map(todo => +todo.id));\n    const zeroUser = '0';\n\n    if (eventUser.value === zeroUser) {\n      setNewToDo(prevState => ({\n        ...prevState,\n        user: 'alarm',\n      }));\n    }\n\n    if (eventTitle.value === '') {\n      setNewToDo(prevState => ({\n        ...prevState,\n        clicked: true,\n      }));\n    }\n\n    const post = {\n      id: maxId + 1,\n      title: eventTitle.value,\n      completed: false,\n      userId: +eventUser.value,\n    };\n\n    if (eventTitle.value !== '' && eventUser.value !== '0') {\n      setToDoList([post, ...toDoList]);\n      setNewToDo(prevState => ({\n        ...prevState,\n        title: '',\n        user: '',\n      }));\n    }\n  }\n\n  function inputHandler(event: React.ChangeEvent<HTMLInputElement>) {\n    setNewToDo({\n      clicked: false,\n      title: event.target.value.replace(/[^a-z0-9 ]/gi, ''),\n      user: newToDo.user,\n    });\n  }\n\n  function handleSelect(event: React.ChangeEvent<HTMLSelectElement>) {\n    setNewToDo(prevState => ({\n      ...prevState,\n      title: newToDo.title,\n      user: event.target.value === '0' ? '' : event.target.value,\n    }));\n  }\n\n  function getUserUnfo(todo: ToDo) {\n    const user: User = {\n      id: '0',\n      name: '',\n      username: '',\n      email: '',\n    };\n    const user2 = copy.find(user3 => user3.id === todo.userId) || user;\n\n    return (\n      <a className=\"UserInfo\" href={`mailto: ${user2.email}`}>\n        {user2.name}\n      </a>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form onSubmit={(event) => submitHandler(event)}>\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={newToDo.title}\n            placeholder=\"test\"\n            onChange={(event) => inputHandler(event)}\n          />\n          <span className={classNames('error', {\n            'show-error': newToDo.clicked,\n          })}\n          >\n            Please enter a title\n          </span>\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={newToDo.user}\n            onChange={(event) => handleSelect(event)}\n          >\n            <option value=\"0\">Choose a user</option>\n            {copy.map((user) => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          <span className={classNames('error', {\n            'show-error': newToDo.user === 'alarm',\n          })}\n          >\n            Please choose a user\n          </span>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        {toDoList.map(todo => {\n          return (\n            <article\n              data-id={todo.id}\n              className=\"TodoInfo TodoInfo--completed\"\n              key={todo.id}\n            >\n              <h2 className=\"TodoInfo__title\">\n                {todo.title}\n              </h2>\n              {getUserUnfo(todo)}\n            </article>\n          );\n        })}\n      </section>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}